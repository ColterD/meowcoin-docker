name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
            echo "VERSION_TAG=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            VERSION=${GITHUB_REF#refs/tags/}
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "VERSION_TAG=${VERSION#v}" >> $GITHUB_ENV
          fi

      - name: Build and push Core image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/core/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/meowcoin-core:latest
            ghcr.io/${{ github.repository_owner }}/meowcoin-core:${{ env.VERSION_TAG }}
          build-args: |
            MEOWCOIN_VERSION=latest
            MEOWCOIN_ARCH=x86_64-linux-gnu

      - name: Build and push Monitor image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/monitor/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/meowcoin-monitor:latest
            ghcr.io/${{ github.repository_owner }}/meowcoin-monitor:${{ env.VERSION_TAG }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            docker-compose.yml
            .env.example
            LICENSE
            README.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}